/**
 * generated by Xtext 2.21.0
 */
package org.xtext.mdsd.arduino.boardgenerator.ioT.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.mdsd.arduino.boardgenerator.ioT.IoTPackage;
import org.xtext.mdsd.arduino.boardgenerator.ioT.SDConfig;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>SD Config</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.mdsd.arduino.boardgenerator.ioT.impl.SDConfigImpl#getClk <em>Clk</em>}</li>
 *   <li>{@link org.xtext.mdsd.arduino.boardgenerator.ioT.impl.SDConfigImpl#getSdo <em>Sdo</em>}</li>
 *   <li>{@link org.xtext.mdsd.arduino.boardgenerator.ioT.impl.SDConfigImpl#getDi <em>Di</em>}</li>
 *   <li>{@link org.xtext.mdsd.arduino.boardgenerator.ioT.impl.SDConfigImpl#getCs <em>Cs</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SDConfigImpl extends MinimalEObjectImpl.Container implements SDConfig
{
  /**
   * The default value of the '{@link #getClk() <em>Clk</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getClk()
   * @generated
   * @ordered
   */
  protected static final int CLK_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getClk() <em>Clk</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getClk()
   * @generated
   * @ordered
   */
  protected int clk = CLK_EDEFAULT;

  /**
   * The default value of the '{@link #getSdo() <em>Sdo</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSdo()
   * @generated
   * @ordered
   */
  protected static final int SDO_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getSdo() <em>Sdo</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSdo()
   * @generated
   * @ordered
   */
  protected int sdo = SDO_EDEFAULT;

  /**
   * The default value of the '{@link #getDi() <em>Di</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDi()
   * @generated
   * @ordered
   */
  protected static final int DI_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getDi() <em>Di</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDi()
   * @generated
   * @ordered
   */
  protected int di = DI_EDEFAULT;

  /**
   * The default value of the '{@link #getCs() <em>Cs</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCs()
   * @generated
   * @ordered
   */
  protected static final int CS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getCs() <em>Cs</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCs()
   * @generated
   * @ordered
   */
  protected int cs = CS_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SDConfigImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return IoTPackage.Literals.SD_CONFIG;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getClk()
  {
    return clk;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setClk(int newClk)
  {
    int oldClk = clk;
    clk = newClk;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IoTPackage.SD_CONFIG__CLK, oldClk, clk));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getSdo()
  {
    return sdo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSdo(int newSdo)
  {
    int oldSdo = sdo;
    sdo = newSdo;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IoTPackage.SD_CONFIG__SDO, oldSdo, sdo));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getDi()
  {
    return di;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDi(int newDi)
  {
    int oldDi = di;
    di = newDi;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IoTPackage.SD_CONFIG__DI, oldDi, di));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getCs()
  {
    return cs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCs(int newCs)
  {
    int oldCs = cs;
    cs = newCs;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IoTPackage.SD_CONFIG__CS, oldCs, cs));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case IoTPackage.SD_CONFIG__CLK:
        return getClk();
      case IoTPackage.SD_CONFIG__SDO:
        return getSdo();
      case IoTPackage.SD_CONFIG__DI:
        return getDi();
      case IoTPackage.SD_CONFIG__CS:
        return getCs();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case IoTPackage.SD_CONFIG__CLK:
        setClk((Integer)newValue);
        return;
      case IoTPackage.SD_CONFIG__SDO:
        setSdo((Integer)newValue);
        return;
      case IoTPackage.SD_CONFIG__DI:
        setDi((Integer)newValue);
        return;
      case IoTPackage.SD_CONFIG__CS:
        setCs((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case IoTPackage.SD_CONFIG__CLK:
        setClk(CLK_EDEFAULT);
        return;
      case IoTPackage.SD_CONFIG__SDO:
        setSdo(SDO_EDEFAULT);
        return;
      case IoTPackage.SD_CONFIG__DI:
        setDi(DI_EDEFAULT);
        return;
      case IoTPackage.SD_CONFIG__CS:
        setCs(CS_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case IoTPackage.SD_CONFIG__CLK:
        return clk != CLK_EDEFAULT;
      case IoTPackage.SD_CONFIG__SDO:
        return sdo != SDO_EDEFAULT;
      case IoTPackage.SD_CONFIG__DI:
        return di != DI_EDEFAULT;
      case IoTPackage.SD_CONFIG__CS:
        return cs != CS_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (clk: ");
    result.append(clk);
    result.append(", sdo: ");
    result.append(sdo);
    result.append(", di: ");
    result.append(di);
    result.append(", cs: ");
    result.append(cs);
    result.append(')');
    return result.toString();
  }

} //SDConfigImpl
